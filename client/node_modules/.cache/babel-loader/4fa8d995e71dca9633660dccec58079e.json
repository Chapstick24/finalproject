{"ast":null,"code":"var _jsxFileName = \"/Users/mychalstanciu/Desktop/finalproject/src/context/GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\"; // initial state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  Queue: localStorage.getItem(\"watchlist\") ? JSON.parse(localStorage.getItem(\"watchlist\")) : [],\n  AlreadySeen: localStorage.getItem(\"AlreadySeen\") ? JSON.parse(localStorage.getItem(\"AlreadySeen\")) : []\n}; // create context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); // provider components\n\nexport const GlobalProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  useEffect(() => {\n    localStorage.setItem(\"queue\", JSON.stringify(state.watchlist));\n    localStorage.setItem(\"alreadySeen\", JSON.stringify(state.AlreadySeen));\n  }, [state]); // actions\n\n  const addMovieToWatchlist = movie => {\n    dispatch({\n      type: \"ADD_MOVIE_TO_WATCHLIST\",\n      payload: movie\n    });\n  };\n\n  const removeMovieFromWatchlist = id => {\n    dispatch({\n      type: \"REMOVE_MOVIE_FROM_WATCHLIST\",\n      payload: id\n    });\n  };\n\n  const addMovieToAlreadySeen = movie => {\n    dispatch({\n      type: \"ADD_MOVIE_TO_AlreadySeen\",\n      payload: movie\n    });\n  };\n\n  const moveToWatchlist = movie => {\n    dispatch({\n      type: \"MOVE_TO_WATCHLIST\",\n      payload: movie\n    });\n  };\n\n  const removeFromAlreadySeen = id => {\n    dispatch({\n      type: \"REMOVE_FROM_AlreadySeen\",\n      payload: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      Queue: state.watchlist,\n      AlreadySeen: state.AlreadySeen,\n      addMovieToWatchlist,\n      removeMovieFromWatchlist,\n      addMovieToAlreadySeen,\n      moveToWatchlist,\n      removeFromAlreadySeen\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/Users/mychalstanciu/Desktop/finalproject/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","AppReducer","initialState","Queue","localStorage","getItem","JSON","parse","AlreadySeen","GlobalContext","GlobalProvider","props","state","dispatch","setItem","stringify","watchlist","addMovieToWatchlist","movie","type","payload","removeMovieFromWatchlist","id","addMovieToAlreadySeen","moveToWatchlist","removeFromAlreadySeen","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACHC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADG,GAEH,EAHe;AAInBG,EAAAA,WAAW,EAAEJ,YAAY,CAACC,OAAb,CAAqB,aAArB,IACTC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CADS,GAET;AANe,CAArB,C,CASA;;AACA,OAAO,MAAMI,aAAa,gBAAGX,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMQ,cAAc,GAAIC,KAAD,IAAW;AAAA;;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACE,UAAD,EAAaC,YAAb,CAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BR,IAAI,CAACS,SAAL,CAAeH,KAAK,CAACI,SAArB,CAA9B;AACAZ,IAAAA,YAAY,CAACU,OAAb,CAAqB,aAArB,EAAoCR,IAAI,CAACS,SAAL,CAAeH,KAAK,CAACJ,WAArB,CAApC;AACD,GAHQ,EAGN,CAACI,KAAD,CAHM,CAAT,CAHuC,CAQvC;;AACA,QAAMK,mBAAmB,GAAIC,KAAD,IAAW;AACrCL,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,wBAAR;AAAkCC,MAAAA,OAAO,EAAEF;AAA3C,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMG,wBAAwB,GAAIC,EAAD,IAAQ;AACvCT,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,6BAAR;AAAuCC,MAAAA,OAAO,EAAEE;AAAhD,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAIL,KAAD,IAAW;AACvCL,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,0BAAR;AAAoCC,MAAAA,OAAO,EAAEF;AAA7C,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMM,eAAe,GAAIN,KAAD,IAAW;AACjCL,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,mBAAR;AAA6BC,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMO,qBAAqB,GAAIH,EAAD,IAAQ;AACpCT,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,yBAAR;AAAmCC,MAAAA,OAAO,EAAEE;AAA5C,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLnB,MAAAA,KAAK,EAAES,KAAK,CAACI,SADR;AAELR,MAAAA,WAAW,EAAEI,KAAK,CAACJ,WAFd;AAGLS,MAAAA,mBAHK;AAILI,MAAAA,wBAJK;AAKLE,MAAAA,qBALK;AAMLC,MAAAA,eANK;AAOLC,MAAAA;AAPK,KADT;AAAA,cAWGd,KAAK,CAACe;AAXT;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA5CM;;GAAMhB,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// initial state\nconst initialState = {\n  Queue: localStorage.getItem(\"watchlist\")\n    ? JSON.parse(localStorage.getItem(\"watchlist\"))\n    : [],\n  AlreadySeen: localStorage.getItem(\"AlreadySeen\")\n    ? JSON.parse(localStorage.getItem(\"AlreadySeen\"))\n    : [],\n};\n\n// create context\nexport const GlobalContext = createContext(initialState);\n\n// provider components\nexport const GlobalProvider = (props) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n    localStorage.setItem(\"queue\", JSON.stringify(state.watchlist));\n    localStorage.setItem(\"alreadySeen\", JSON.stringify(state.AlreadySeen));\n  }, [state]);\n\n  // actions\n  const addMovieToWatchlist = (movie) => {\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\n  };\n\n  const removeMovieFromWatchlist = (id) => {\n    dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id });\n  };\n\n  const addMovieToAlreadySeen = (movie) => {\n    dispatch({ type: \"ADD_MOVIE_TO_AlreadySeen\", payload: movie });\n  };\n\n  const moveToWatchlist = (movie) => {\n    dispatch({ type: \"MOVE_TO_WATCHLIST\", payload: movie });\n  };\n\n  const removeFromAlreadySeen = (id) => {\n    dispatch({ type: \"REMOVE_FROM_AlreadySeen\", payload: id });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        Queue: state.watchlist,\n        AlreadySeen: state.AlreadySeen,\n        addMovieToWatchlist,\n        removeMovieFromWatchlist,\n        addMovieToAlreadySeen,\n        moveToWatchlist,\n        removeFromAlreadySeen,\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}