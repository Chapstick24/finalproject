{"ast":null,"code":"var _jsxFileName = \"/Users/mychalstanciu/Desktop/finalproject/src/components/SearchResult.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport Moment from \"react-moment\";\nimport { GlobalState } from \"../context/GlobalState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchResult = ({\n  movie\n}) => {\n  _s();\n\n  const {\n    addMovieToQueue,\n    addMovieToWatched,\n    Queue,\n    AlreadySeen\n  } = useContext(GlobalContext);\n  let storedMovie = Queue.find(o => o.id === movie.id);\n  let storedMovieWatched = AlreadySeen.find(o => o.id === movie.id);\n  const QueueDisabled = storedMovie ? true : storedMovieWatched ? true : false;\n  const watchedDisabled = storedMovieWatched ? true : false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poster-wrapper\",\n      children: [console.log(addMovieToQueue), movie.poster_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w200${movie.poster_path}`,\n        alt: `${movie.title} Poster`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filler-poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"release-date\",\n          children: /*#__PURE__*/_jsxDEV(Moment, {\n            format: \"YYYY\",\n            children: movie.release_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          disabled: QueueDisabled,\n          onClick: () => addMovieToQueue(movie),\n          children: \"Add to Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          disabled: watchedDisabled,\n          onClick: () => addMovieToWatched(movie),\n          children: \"Add to Watched\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchResult, \"4m40dyZxF7u+EP49jIXVHaWMB38=\");\n\n_c = SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/Users/mychalstanciu/Desktop/finalproject/src/components/SearchResult.js"],"names":["React","useContext","Moment","GlobalState","SearchResult","movie","addMovieToQueue","addMovieToWatched","Queue","AlreadySeen","GlobalContext","storedMovie","find","o","id","storedMovieWatched","QueueDisabled","watchedDisabled","console","log","poster_path","title","release_date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;;AAGA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACzC,QAAM;AACJC,IAAAA,eADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA;AAJI,MAKFR,UAAU,CAACS,aAAD,CALd;AAOA,MAAIC,WAAW,GAAGH,KAAK,CAACI,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAAST,KAAK,CAACS,EAAjC,CAAlB;AACA,MAAIC,kBAAkB,GAAGN,WAAW,CAACG,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAAST,KAAK,CAACS,EAAvC,CAAzB;AAEA,QAAME,aAAa,GAAGL,WAAW,GAC7B,IAD6B,GAE7BI,kBAAkB,GAClB,IADkB,GAElB,KAJJ;AAMA,QAAME,eAAe,GAAGF,kBAAkB,GAAG,IAAH,GAAU,KAApD;AAGA,sBAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,iBACCG,OAAO,CAACC,GAAR,CAAYb,eAAZ,CADD,EAEGD,KAAK,CAACe,WAAN,gBACC;AACE,QAAA,GAAG,EAAG,kCAAiCf,KAAK,CAACe,WAAY,EAD3D;AAEE,QAAA,GAAG,EAAG,GAAEf,KAAK,CAACgB,KAAM;AAFtB;AAAA;AAAA;AAAA;AAAA,cADD,gBAMC;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,oBAAuBhB,KAAK,CAACgB;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAC,MAAf;AAAA,sBAAuBhB,KAAK,CAACiB;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,KADZ;AAEE,UAAA,QAAQ,EAAEN,aAFZ;AAGE,UAAA,OAAO,EAAE,MAAMV,eAAe,CAACD,KAAD,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AACE,UAAA,SAAS,EAAC,KADZ;AAEE,UAAA,QAAQ,EAAEY,eAFZ;AAGE,UAAA,OAAO,EAAE,MAAMV,iBAAiB,CAACF,KAAD,CAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA2CD,CA/DM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext } from \"react\";\nimport Moment from \"react-moment\";\nimport {GlobalState} from \"../context/GlobalState\"\n\n\nexport const SearchResult = ({ movie }) => {\n  const {\n    addMovieToQueue,\n    addMovieToWatched,\n    Queue,\n    AlreadySeen,\n  } = useContext(GlobalContext);\n\n  let storedMovie = Queue.find((o) => o.id === movie.id);\n  let storedMovieWatched = AlreadySeen.find((o) => o.id === movie.id);\n\n  const QueueDisabled = storedMovie\n    ? true\n    : storedMovieWatched\n    ? true\n    : false;\n\n  const watchedDisabled = storedMovieWatched ? true : false;\n  \n\n  return (\n    \n    <div className=\"result-card\">\n      <div className=\"poster-wrapper\">\n      {console.log(addMovieToQueue)}\n        {movie.poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n            alt={`${movie.title} Poster`}\n          />\n        ) : (\n          <div className=\"filler-poster\" />\n        )}\n      </div>\n\n      <div className=\"info\">\n        <div className=\"header\">\n          <h3 className=\"title\">{movie.title}</h3>\n          <h4 className=\"release-date\">\n            <Moment format=\"YYYY\">{movie.release_date}</Moment>\n          </h4>\n        </div>\n\n        <div className=\"controls\">\n          <button\n            className=\"btn\"\n            disabled={QueueDisabled}\n            onClick={() => addMovieToQueue(movie)}\n          >\n            Add to Queue\n          </button>\n\n          <button\n            className=\"btn\"\n            disabled={watchedDisabled}\n            onClick={() => addMovieToWatched(movie)}\n          >\n            Add to Watched\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}